<?php

/**
 * Implements hook_exit().
 */
function progenitor_perf_exit() {
  if (variable_get('cache', 0) && drupal_page_is_cacheable()) {
    // If the Drupal cache is enabled, hook_exit() will fire without
    // bootstrapping to include path.inc. This results in a fatal error.
    // Headers are cached as part of the page cache, so skipping this in that
    // situation does not result in any behavioral change.
    if (function_exists('drupal_is_front_page') && drupal_is_front_page()) {
      $max_age = variable_get('progenitor_perf_max_age_<front>', NULL);
    }
    else {
      $max_age = variable_get('progenitor_perf_max_age' . current_path(), NULL);
    }
    if (isset($max_age)) {
      progenitor_perf_set_max_age($max_age);
    }
  }
}

/**
 * Implements hook_workbench_moderation_transition().
 */
function progenitor_perf_workbench_moderation_transition($node, $previous_state, $new_state) {
  // When the node's workflow state changes such that it toggles between core
  // unpublished <=> published, signal to the Expire module that a node update
  // has occurred.
  //
  // Currently this is hard-wired to a 'published' moderation state, this needs
  // followup to be a bit more generic.
  if ('published' == $previous_state || 'published' == $new_state) {
    if (module_exists('expire')) {
      expire_execute_expiration('node', $node, EXPIRE_NODE_UPDATE);
      // Make sure menu cache gets updated so when pages regenerate if the node
      // being modified was in the menu the menu is up to date.
      register_shutdown_function('menu_cache_clear_all');
    }
  }
}

/**
 * Override the site's caching headers.
 *
 * Only the last operation to set these headers will work. Only set these
 * headers if:
 *  - the page cache is enabled
 *  - the current page is cacheable
 *
 * @param int $max_age
 *   The page cache TTL in seconds.
 *
 * @return int
 *   The actual max-age used, important if no parameter is used.
 */
function progenitor_perf_set_max_age($max_age = NULL) {
  if (!isset($max_age)) {
    $max_age = variable_get('page_cache_maximum_age', 3600);
  }
  drupal_add_http_header('Cache-Control', 'public, max-age=' . $max_age);
  drupal_add_http_header('Expires', date(DATE_RFC1123, REQUEST_TIME + $max_age));
  
  return $max_age;
}
